{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.service.ts","./src/app/modules/Stream/stream.component.ts","./src/app/modules/Stream/stream.component.html","./src/app/modules/Stream/stream.module.ts","./src/app/modules/StreamerCard/streamer-card.component.ts","./src/app/modules/StreamerCard/streamer-card.component.html","./src/app/modules/StreamerCard/streamer-card.module.ts","./src/assets/utils/ExtendHttpClient.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit, SecurityContext } from '@angular/core';\nimport { AppService } from './app.service';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'twitch-streamer-list';\n  streamerList: any[] = [\n    'h2xd',\n    'radjon',\n    'deadlyfantasy',\n    'zermisttv',\n    'wayland0',\n    'ZIGI_hate',\n    'rekvizit8bit',\n    'bratishkinoff',\n    'jesusavgn'\n  ]\n\n  streams: (Twitch.Stream.Data | boolean)[] = []\n  currentStream: Twitch.Stream.Data;\n\n  constructor(private appServices: AppService, private sanitizer: DomSanitizer) {}\n\n  ngOnInit () {\n    this.loadStreamerList()\n  }\n\n  launchStream(stream: Twitch.Stream.Data) {\n    this.currentStream = stream;\n  }\n\n  /**\n   * Private\n   */\n\n  private async loadStreamerList() {\n    const newList: any[] = await Promise.all(this.streamerList.map(this.loadStreamerData.bind(this)))\n    const newStreams = await Promise.all(newList.map((streamer) => {\n      return this.getStreamById(streamer._id)\n    }))\n\n    newList.sort((a) => {\n      const stream = newStreams.find((e: Twitch.Stream.Data) => e?.channel?._id.toString() === a._id.toString());\n      return !!stream ? -1 : 1;\n    })\n\n    newStreams.sort((stream: Twitch.Stream.Data | boolean) => {\n      return !!stream ? -1 : 1;\n    })\n\n    this.streamerList = newList;\n    this.streams = newStreams\n  }\n\n  private loadStreamerData (name: string): Promise<Twitch.Streamer | false> {\n    return new Promise(resolve => {\n      const service = this.appServices.getStreamer(name).subscribe((e: any) => {\n        if (e._total) {\n          resolve(e.users[0] as Twitch.Streamer)\n          service.unsubscribe()\n          return;\n        }\n        resolve(false)\n      })\n    })\n  }\n\n  private getStreamById (id: number): Promise<Twitch.Stream.Data | boolean> {\n    return new Promise(resolve => {\n      const service = this.appServices.getStream(id).subscribe((e: any) => {\n        if (e.stream) {\n          resolve(e.stream)\n          service.unsubscribe()\n          return;\n        }\n        resolve(false)\n      })\n    })\n  }\n}\n","<div class=\"app\">\n  <div class=\"app__sidebar\">\n    <h1> Angular Streamer </h1>\n    <div class=\"streamer-list\">\n      <streamer-card\n        *ngFor=\"let streamer of streamerList; index as i\"\n        [streamer]=\"streamer\"\n        [stream]=\"streams[i]\"\n        (onPlay)=\"launchStream($event)\"\n      ></streamer-card>\n    </div>\n  </div>\n\n  <div class=\"app__content\">\n    <h2> Current Stream </h2>\n    <stream\n      [stream]=\"currentStream\"\n    ></stream>\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { AppService } from './app.service';\n\nimport { StreamerCardModule } from './modules/StreamerCard/streamer-card.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { StreamModule } from './modules/Stream/stream.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    StreamerCardModule,\n    StreamModule\n  ],\n  providers: [ AppService ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n","import { HttpClient }  from '@angular/common/http'\nimport { Injectable } from '@angular/core';\nimport { ExtendHttpClient, HttpClientRequestMethods } from '../assets/utils/ExtendHttpClient';\n@Injectable()\nexport class AppService {\n  private http: HttpClientRequestMethods = ExtendHttpClient(this._http,  {\n    baseHeaders: {\n      // Default headers for all requests\n      'Client-Id': '1b10wjmbcfujfjpmyvoigzv9vpjkyc',\n      'Accept': 'application/vnd.twitchtv.v5+json'\n    },\n    baseParams: {\n      // Default params for all requests\n    },\n    baseUrl: 'https://api.twitch.tv/kraken/'\n  })\n\n  constructor (private _http: HttpClient) {}\n\n  getStream (id: number) {\n    return this.http.get('streams/' + id)\n  }\n\n  getStreamer (streamerName: string) {\n    return this.http.get('users', {\n      params: {\n        login: streamerName\n      }\n    })\n  }\n}\n","import { Component, Input } from \"@angular/core\";\nimport { DomSanitizer, SafeResourceUrl } from \"@angular/platform-browser\";\n@Component({\n  selector: 'stream',\n  templateUrl: './stream.component.html',\n  styleUrls: ['./stream.component.scss']\n})\nexport class StreamComponent {\n  @Input() stream: Twitch.Stream.Data;\n  constructor (private sanitizer: DomSanitizer) {}\n\n  getStreamLink (): SafeResourceUrl {\n    const { bypassSecurityTrustResourceUrl } = this.sanitizer;\n    const { name } = this.stream.channel;\n    console.log(this.stream)\n    return bypassSecurityTrustResourceUrl('//player.twitch.tv?channel='+name+'&parent=localhost')\n  }\n}\n","<div class=\"stream\">\n  <div class=\"stream__container\">\n    <iframe\n      *ngIf=\"!!stream\"\n      class=\"stream__frame\"\n      [src]=\"getStreamLink()\"\n    ></iframe>\n\n    <div *ngIf=\"!stream\" class=\"stream__placeholder\">\n      Pick a stream\n    </div>\n  </div>\n\n  <div\n    *ngIf=\"!!stream\"\n    class=\"stream__info\"\n  >\n    <h2> {{ stream.channel.display_name }} </h2>\n    <h3 class=\"stream__title\">\n      [ {{ stream.game }} ] {{ stream.channel.status }}\n    </h3>\n    <p> Watchers: {{ stream.viewers }} </p>\n  </div>\n</div>\n","import { NgModule } from '@angular/core'\nimport { StreamComponent } from './stream.component';\nimport { CommonModule } from '@angular/common';\n@NgModule({\n  imports: [ CommonModule ],\n  declarations: [\n    StreamComponent\n  ],\n  exports: [StreamComponent]\n})\nexport class StreamModule {}\n","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core'\n\n@Component({\n  selector: 'streamer-card',\n  templateUrl: './streamer-card.component.html',\n  styleUrls: ['./streamer-card.component.scss']\n})\nexport class StreamerCardComponent {\n  @Input() streamer: Twitch.Streamer;\n  @Input() stream: Twitch.Stream.Data;\n  @Output() onPlay = new EventEmitter<Twitch.Stream.Data>();\n\n  buttonPlayClick () {\n    this.onPlay.emit(this.stream);\n  }\n}\n","<div class=\"streamer-card\">\n  <img [src]=\"streamer.logo || '//via.placeholder.com/32x32'\" alt=\"\" class=\"streamer-card__photo\">\n  <div class=\"streamer-card__title\">\n    {{ streamer.display_name || ('loading...') }}\n  </div>\n  <div class=\"streamer-card__subtitle\">\n    {{ streamer.bio || 'no-description' }}\n  </div>\n  <div class=\"streamer-card__actions\">\n    <ng-template [ngIf]=\"!!stream\">\n      <button (click)=\"buttonPlayClick()\" class='button'>play</button>\n    </ng-template>\n    <button class='button' title=\"Remove streamer from list\">X</button>\n  </div>\n</div>\n","import { NgModule } from \"@angular/core\";\nimport { BrowserModule } from '@angular/platform-browser';\nimport { StreamerCardComponent } from \"./streamer-card.component\";\nimport { CommonModule } from '@angular/common';\n@NgModule({\n  imports: [\n    BrowserModule,\n    CommonModule\n  ],\n  declarations: [StreamerCardComponent],\n  exports: [StreamerCardComponent]\n})\nexport class StreamerCardModule {}\n","import { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n/**\n * Создает оберточные методы вокруг методов HttpClient для определения заголовков и параметров по умолчанию для каждого метода\n * @param { HttpClient } http - экземпляр класса HttpClient\n * @param { ExtendHttpClientConfig } config - Настройки запросов\n */\nexport function ExtendHttpClient (http: HttpClient, config: ExtendHttpClientConfig): HttpClientRequestMethods {\n  let { baseUrl } = config;\n  const { baseHeaders, baseParams } = config;\n  const excludeMethods = ['constructor', 'request']\n  const requestMethods = Object.getOwnPropertyNames((http as any).__proto__).filter(e => !excludeMethods.includes(e))\n  const methodList = {};\n\n  if (baseUrl[baseUrl.length - 1] !== '/') {\n    baseUrl = baseUrl + '/'\n  }\n\n  for (let requestMethod of requestMethods) {\n    methodList[requestMethod] = function (method: string, options?:HttpClientRequestOptions): Observable<any> {\n      const argCount = http[requestMethod].length;\n      const isMethodContainsBody = argCount === 2;\n\n      const headers = {\n        ...baseHeaders,\n        ...(options?.headers || {})\n      }\n      const params = {\n        ...baseParams,\n        ...(options?.params || {})\n      }\n\n      const requestOptions = {\n        observe: 'body',\n        responseType: 'json',\n        ...options,\n        headers,\n        params\n      }\n\n      if (isMethodContainsBody) {\n        delete requestOptions.params;\n      }\n      return http[requestMethod](baseUrl + method, isMethodContainsBody && options.params || requestOptions, isMethodContainsBody && requestOptions)\n    }\n  }\n\n  return methodList;\n}\n\n/**\n * @see {@link https://angular.io/guide/http#requesting-data-from-a-server | Requesting data from a server}\n */\nexport interface HttpClientRequestOptions {\n  headers?:{[header: string]: string | string[]},\n  observe?: 'body' | 'events' | 'response',\n  params?: {[param: string]: string | string[]},\n  reportProgress?: boolean,\n  responseType?: 'arraybuffer'| 'blob'|'json'|'text',\n  withCredentials?: boolean\n}\n\ntype PostRequest = (method: string, body?: any, options?: HttpClientRequestOptions) => Observable<any>\ntype GetRequest = (method: string, options?: HttpClientRequestOptions) => Observable<any>\nexport interface HttpClientRequestMethods {\n  [requestMethod: string]: PostRequest | GetRequest\n}\n\nexport interface ExtendHttpClientConfig {\n  /**\n   * Базовые параметры, которые передаются в каждом запросе\n   */\n  baseParams?: {[param: string]: string | string[]},\n  /**\n   * Базовые заголовки, которые передаются в каждом запросе\n   */\n  baseHeaders?: {[header: string]: string | string[]},\n  /**\n   * Базовый URL который будет добавлен к URL запроса\n   */\n  baseUrl: string\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}